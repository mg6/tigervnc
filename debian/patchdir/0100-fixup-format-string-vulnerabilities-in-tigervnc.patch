Index: vncviewer/Viewport.cxx
===================================================================
--- a/vncviewer/Viewport.cxx	(Revision 4882)
+++ b/vncviewer/Viewport.cxx	(Arbeitskopie)
@@ -950,7 +950,7 @@
   case ID_INFO:
     if (fltk_escape(cc->connectionInfo(), buffer, sizeof(buffer)) < sizeof(buffer)) {
       fl_message_title(_("VNC connection info"));
-      fl_message(buffer);
+      fl_message("%s", buffer);
     }
     break;
   case ID_ABOUT:
Index: vncviewer/vncviewer.cxx
===================================================================
--- a/vncviewer/vncviewer.cxx	(Revision 4882)
+++ b/vncviewer/vncviewer.cxx	(Arbeitskopie)
@@ -86,7 +86,7 @@
 void about_vncviewer()
 {
   fl_message_title(_("About TigerVNC Viewer"));
-  fl_message(aboutText);
+  fl_message("%s", aboutText);
 }
 
 static void about_callback(Fl_Widget *widget, void *data)
@@ -311,7 +311,7 @@
   delete cc;
 
   if (exitError != NULL)
-    fl_alert(exitError);
+    fl_alert("%s", exitError);
 
   return 0;
 }
Index: vncviewer/UserDialog.cxx
===================================================================
--- a/vncviewer/UserDialog.cxx	(Revision 4882)
+++ b/vncviewer/UserDialog.cxx	(Arbeitskopie)
@@ -156,16 +156,16 @@
 
   switch (flags & 0xf) {
   case M_OKCANCEL:
-    return fl_choice(buffer, NULL, fl_ok, fl_cancel) == 1;
+    return fl_choice("%s", NULL, fl_ok, fl_cancel, buffer) == 1;
   case M_YESNO:
-    return fl_choice(buffer, NULL, fl_yes, fl_no) == 1;
+    return fl_choice("%s", NULL, fl_yes, fl_no, buffer) == 1;
   case M_OK:
   default:
     if (((flags & 0xf0) == M_ICONERROR) ||
         ((flags & 0xf0) == M_ICONWARNING))
-      fl_alert(buffer);
+      fl_alert("%s", buffer);
     else
-      fl_message(buffer);
+      fl_message("%s", buffer);
     return true;
   }
 
Index: vncviewer/CConn.cxx
===================================================================
--- a/vncviewer/CConn.cxx	(Revision 4882)
+++ b/vncviewer/CConn.cxx	(Arbeitskopie)
@@ -100,7 +100,7 @@
     vlog.info(_("connected to host %s port %d"), serverHost, serverPort);
   } catch (rdr::Exception& e) {
     vlog.error(e.str());
-    fl_alert(e.str());
+    fl_alert("%s", e.str());
     exit_vncviewer();
     return;
   }
